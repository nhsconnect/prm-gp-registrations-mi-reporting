index="$index$"

{% from 'gp2gp_document_attachments_snapshot_report/gp2gp_document_attachments_snapshot_report_base.splunk' import
gp2gp_document_attachments_snapshot_base %}

{{ gp2gp_document_attachments_snapshot_base() }}

| spath output=reason path=payload.documentMigration.reason
| spath output=sizeBytes path=payload.attachment.sizeBytes
| spath output=mimeType path=payload.attachment.mimeType

| eval conversation_id = conversationId
| eval requesting_supplier_name = requestingSupplierName
| eval sending_supplier_name = sendingSupplierName
| eval reporting_practice_ods_code = reportingPracticeOdsCode
| eval requesting_practice_ods_code = requestingPracticeOdsCode
| eval sending_practice_ods_code =  sendingPracticeOdsCode
| eval attachment_type = documentMigrationClinicalType
| eval integrated_successfully = successfulDocumentMigration
| eval size_greater_than_100mb = if(sizeBytes > 100 * 1048576, "true", "false")
| eval failed_to_integrate_reason = if(reason="null", "N/A", reason) ```needed because "null" values cause a problem when displaying in table format on dashboard```
| eval mime_type = mimeType

| fillnull value="N/A"

| where attachment_type = "$column$"
| where case( "$legend$" == "Success", integrated_successfully=="true",
              "$legend$" == "Fail", integrated_successfully=="false",
              1=1, 1=0
              )

| table
    conversation_id,
    requesting_supplier_name,
    sending_supplier_name,
    reporting_practice_ods_code,
    requesting_practice_ods_code,
    sending_practice_ods_code,
    attachment_type,
    integrated_successfully,
    failed_to_integrate_reason,
    size_greater_than_100mb,
    mime_type
