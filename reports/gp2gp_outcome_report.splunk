index="$index$"
| eval _time=strptime(registrationEventDateTime,"%Y-%m-%dT%H:%M:%S")
| sort 0 _time

{% from 'functions.splunk' import 
set_time_to_registration_datetime,
filter_reporting_window,
calculate_registration_status,
calculate_sla_status,
calculate_outcome %}

| spath output=integration_outcome path=payload{}.integration.outcome ``` calculate_outcome() depends on this. ```
| eval ehrResponseEventDateTime = if(eventType="EHR_RESPONSES",_time, null())
| eval ehrRequestEventDateTime = if(eventType="EHR_REQUESTS",_time, null())
| eval transCompatStatEventDateTime = if(eventType="TRANSFER_COMPATIBILITY_STATUSES",_time, null())
| eval ehrReadyToIntegrateEventDateTime = if(eventType="READY_TO_INTEGRATE_STATUSES",_time, null())


```| streamstats earliest(_time) as conversationStart by conversationId```

```{{ filter_reporting_window() }}```

| transaction conversationId keeporphans=t

{{ calculate_registration_status() }}
{{ calculate_sla_status() }}
{{ calculate_outcome() }}

```| table conversationId, outcome, registrationStatus,totalTransferTimeOutsideSla24Hours```


| stats
    first(outcome) as outcome, 
    count(outcome) as count by conversationId

